swagger: "2.0"
info:
  version: "0.0.1"
  title: APIs
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /login/{role}:
    x-swagger-router-controller: UserController
    post:
      operationId: login
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /register:
    x-swagger-router-controller: UserController
    post:
      operationId: register
      description: "Register an account"
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: getListUser
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  User:
    type: object
    properties:
      username:
        type: string
        example: username
      password:
        type: string
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
